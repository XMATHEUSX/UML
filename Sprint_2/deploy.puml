@startuml
allowmixing

boundary interface

control sistema

class usuario {
- id: int
- senha: String 
- cadastroAprovado: String 
- dataCriacao : date
- cpf : String
- nome : String
- sexo : char
- email: String
- data_nascimento : date
- telefone: string
- endereco: Endereco
+ ValidaUsuario(cpf:string,fotos:Img)
+ SalvaDados(nome:string,email:string,senha:string,cpf:string,fotos:Img,endereco:Endereco)
+ SalvaDadosMeioPagamento(nome do titular:string, número do cartão:string, validade:date, cpf do titular do cartão:string)
+ VerificaDisponiblidade((cpf:string,email:string)

}

class motorista
{
- CNH : string
- Receber_corrida : string
}

class passageiro 
{

- meioPagamento: MeioPagamento

}
class endereco
{
- cep: String
- rua: String
- numero: int
- Complemento: String
}

class MeioPagamento
{
- nomeTitular : String 
- bandeiraCartao : String
- numero : String
- validade: date
- cpfTitularCartão: String
- codVerificacao: int
+ ValidaMeioPagamento(nome do titular:string, número do cartão:string, validade:date, cvv:string, cpf do titular do cartão:string)
} 

class Solicitacao {
- id: int
- clienteld: int
- horaPedido: time
- enderecoOrigem:Endereco 
- enderecoDestino: Endereco 
- statusSolicitacao: char
- metodoPag: char
+ ValidaPosicao()
+ EstimativaCusto()
}


class Corrida {
- id: int
- horaAceite : time
- motoristald: int
- distancia: float
- valor: float
}

class Despacho {
+ EnviaSolicitacao()
+ CriarCorrida()
}

interface --- sistema

passageiro "1" *-up-x "0..*" MeioPagamento
passageiro "1" *-up-x "1" endereco
motorista "1" *-up-x "1" endereco
usuario "1" <|-down- "1" motorista
usuario "1" <|-right- "1" passageiro
sistema -- usuario
sistema -- MeioPagamento
sistema -- Solicitacao
sistema -- Despacho

passageiro --> Solicitacao
motorista --> Corrida
Solicitacao *-- Despacho
Despacho --> Corrida

@enduml